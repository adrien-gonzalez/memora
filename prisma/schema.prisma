// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(cuid())
  firstName   String
  lastName    String
  email       String       @unique
  password    String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  // Relations
  categories    Category[]
  subcategories Subcategory[]
  notes         Note[]

  @@map("users")
}

model Category {
  id            String        @id @default(cuid())
  name          String
  description   String?
  userId        String
  user          User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  // Relations
  subcategories Subcategory[]

  @@map("categories")
}

model Subcategory {
  id          String      @id @default(cuid())
  name        String
  description String?
  categoryId  String
  category    Category    @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  userId      String
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  // Relations
  notes       Note[]

  @@map("subcategories")
}

model Note {
  id            String      @id @default(cuid())
  title         String
  description   String
  subcategoryId String
  subcategory   Subcategory @relation(fields: [subcategoryId], references: [id], onDelete: Cascade)
  userId        String
  user          User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  order         Int         @default(0)

  // Relations
  snippets      Snippet[]

  @@map("notes")
}

model Snippet {
  id       String  @id @default(cuid())
  code     String
  language String
  noteId   String
  note     Note    @relation(fields: [noteId], references: [id], onDelete: Cascade)
  order    Int     @default(0)

  @@map("snippets")
}

